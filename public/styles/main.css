/*! normalize.css v4.2.0 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,optgroup,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}html{box-sizing:border-box}*,:after,:before{box-sizing:inherit}a{text-decoration:none}body{font-family:Chava,Arial,sans-serif;margin:0;padding:0;font-size:16px;text-rendering:auto;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.l-content{margin:0 auto}@font-face{font-family:Chava;src:url(../fonts/Chava-Regular.ttf)}.header{height:50px;width:100%}.nav{justify-content:flex-end;align-items:center;background:#93f;padding:0 50px}.nav,.navbar{display:flex;flex-direction:row}.navbar{margin:0;padding:0;list-style-type:none;justify-content:center;align-items:flex-end;height:50px}.navbar__item{display:inline-block;margin-left:25px}.navbar__link{color:#fff;font-size:1.5rem;transition:all .2s ease-in-out}.navbar__link:hover{text-shadow:2px 2px 2px #bf80ff}.hero{display:flex;flex-direction:row;justify-content:center;align-items:center;position:relative;margin:0;height:calc(100vh - 75px);background:linear-gradient(#93f,#39f);background-repeat:no-repeat}.logo{position:absolute;top:-37px;left:3vw;height:120px;width:100px;border-bottom:5px solid gray;background-image:url(../img/stand1.png);background-repeat:no-repeat;background-size:contain;background-position:100% 100%;animation-name:a;animation-duration:.3s;animation-iteration-count:infinite}@keyframes a{25%{background-image:url(../img/stand2.png)}50{background-image:url(../img/stand3.png)}75{background-image:url(../img/stand4.png)}to{background-image:url(../img/stand1.png)}}.intro{color:#fff;text-align:center}.intro__name{margin:0;margin-bottom:20px;font-size:10vw;text-shadow:2px 2px 2px #93f,-2px -2px 2px #93f,2px -2px 2px #93f,-2px 2px 2px #93f,4px 0 2px #bf80ff,-4px 0 2px #bf80ff,4px 4px 2px #bf80ff,-4px -4px 2px #bf80ff,4px -4px 2px #bf80ff,-4px 4px 2px #bf80ff,0 4px 2px #bf80ff,0 -4px 2px #bf80ff}.intro__slogan{font-size:2vw;margin-bottom:60px}.intro__button{color:#fff;font-size:2vw;padding:.7vw 3vw;background:#bf80ff;border:5px solid #a64dff;transition:all .2s ease-in-out}.intro__button:hover{background:#c9f;border:5px solid #b366ff}.star{position:absolute;top:30vh;left:10vw;animation-name:b;animation-duration:.5s;animation-iteration-count:infinite}.star:nth-child(odd){animation-delay:.25s}.star:nth-child(2){top:70vh;left:80vw}.star:nth-child(3){top:7vh;left:77vw}.star:nth-child(4){top:15vh;left:44vw}.star:nth-child(5){top:80vh;left:25vw}.star:nth-child(6){top:70vh;left:90vw}.star__light{position:relative}.star__light:before{top:6px;width:14px;height:2px}.star__light:after,.star__light:before{position:absolute;content:"";background:#fff}.star__light:after{left:6px;width:2px;height:20px}.star__light--down{position:relative}.star__light--down:before{top:13px;position:absolute;content:"";width:14px;height:2px;background:#fff}.star__light--down:after{left:6px;position:absolute;content:"";width:2px;height:20px;background:#fff}@keyframes b{0%{transform:scale(1.1)}to{transform:scale(1)}}.falling-man{margin:0 auto;position:fixed;top:10vh;left:50%;transform:translateX(-50%)}.falling-man__img{display:block;background-image:url(../img/fall1.png);background-repeat:no-repeat;background-size:cover;background-position:50%;height:65px;width:140px;position:relative;animation-name:c;animation-duration:.2s;animation-iteration-count:infinite}.falling-man__img:before{top:-20px;left:16px;height:20px}.falling-man__img:after,.falling-man__img:before{position:absolute;content:"";width:1px;background:#fff}.falling-man__img:after{top:-14px;left:6px;height:30px}@keyframes c{25%{background-image:url(../img/fall2.png)}50{background-image:url(../img/fall3.png)}75{background-image:url(../img/fall4.png)}to{background-image:url(../img/fall1.png)}}.main{background:linear-gradient(#39f,#303f9f,#e64a19);background-repeat:no-repeat}.main-section{align-items:flex-start;padding:0 8vw;height:320px;color:#fff}.main-section,.main-section:nth-child(even){display:flex;flex-direction:column;justify-content:center}.main-section:nth-child(even){align-items:flex-end}.main-section:nth-child(even) .main-section__text{text-align:right}.main-section__heading{margin:0;margin-bottom:20px;font-size:4vw;letter-spacing:.2vw;text-shadow:2px 2px 2px #bf80ff,-2px -2px 2px #bf80ff,2px -2px 2px #bf80ff,-2px 2px 2px #bf80ff}.main-section__text{font-size:1.3vw;letter-spacing:.2vw;line-height:1.6}.main-section__text strong{font-size:1.5vw}.contacts{display:flex;flex-direction:row;justify-content:center;align-items:center;height:70vh;border-top:10px dashed #e64a19;padding:0 20px}.contact-info__heading{margin:0;margin-bottom:20px;font-size:4vw;text-align:center}.contact-info__text{font-size:2vw;text-align:center;margin-bottom:40px}.media-links{margin:0;display:flex;flex-direction:row;justify-content:space-around;align-items:center;flex-wrap:wrap}.media-links__link{font-size:5vh;line-height:1;margin:0 25px 20px;transition:color .2s ease-in-out}.media-links__link:hover{color:#303f9f}.media-links__img{transform:translateY(5px);max-height:5vh;width:5vh}.footer{height:10vh;border-top:10px dashed #fff;background:gray;padding:0 50px;display:flex;flex-direction:row;justify-content:space-between;align-items:center}.footer__copyright,.footer__made-by{font-size:1.5vw}.footer__author-link{transition:color .3s ease-in-out}.footer__author-link:hover{color:#93f}
/*# sourceMappingURL=data:application/json;base64, */
